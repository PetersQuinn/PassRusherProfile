import pandas as pd 
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import r2_score
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import PolynomialFeatures
import statsmodels.api as sm
import re

#load the nfl data we will build our regression model with
NFLStats=pd.read_csv(r"C:\Users\quint\OneDrive\Desktop\Python\PassRusherProfile\Data\NFLData2024.csv")

#load all of last years salary data (accurate as of 3/8/2025)
SalaryStats=pd.read_excel(r"C:\Users\quint\OneDrive\Desktop\Python\PassRusherProfile\Data\SalaryData2024.xlsx")

# keep only relevant data from the nflstats (ignoring LHS vs RHS data)
NFL_filter=NFLStats[["player", "team_name", "position", "player_id","player_game_count", "assists", "franchise_id", "hits", "hurries", "misses", "pass_rush_percent", "pass_rush_snaps", "pass_snaps", "pressures", "prp", "sacks", "stops", "tackles"]]

#keep only relevant dat from the salary stats (ignoring team name as this will come from NFL_Filter once merged)
Salary_filter=SalaryStats[["Player", "Age","Total Value", "Avg./Year", "Total Guaranteed", "Fully Guaranteed", "Free Agency"]]

#remove all corners, safeties, interiors, and linebackers from the dataset
#was later discovered far more positions existed as potential outliers (like WR, QB, HB)
#these also had to be removed as the pass rush percentage was not able to remove them
NFL_filter=NFL_filter[NFL_filter["position"]!= "CB"]
NFL_filter=NFL_filter[NFL_filter["position"]!= "S"]
NFL_filter=NFL_filter[NFL_filter["position"]!= "LB"]
NFL_filter=NFL_filter[NFL_filter["position"]!= "DI"]
NFL_filter=NFL_filter[NFL_filter["position"]!= "QB"]
NFL_filter=NFL_filter[NFL_filter["position"]!= "WR"]
NFL_filter=NFL_filter[NFL_filter["position"]!= "HB"]
NFL_filter=NFL_filter[NFL_filter["position"]!= "TE"]

#used chat for this function, will need to verify and validate!!!!
def standardize_name(name):
    name = name.lower().strip()  # Lowercase & remove leading/trailing spaces
    name = re.sub(r"[^\w\s]", "", name)  # Remove special characters (apostrophes, hyphens, etc.)
    name = re.sub(r"\s+", " ", name)  # Replace multiple spaces with a single space
    return name

#standardizes names to make merging more accurate
NFL_filter["player"] = NFL_filter["player"].apply(standardize_name)
Salary_filter["Player"] = Salary_filter["Player"].apply(standardize_name)

print(NFL_filter.head())
print(len(NFL_filter)) 

print(Salary_filter.head())
print(len(Salary_filter)) 

# Get unique player names from both datasets
nfl_players = set(NFL_filter["player"])
salary_players = set(Salary_filter["Player"])

# Find players in NFL data but NOT in Salary data
nfl_not_in_salary = nfl_players - salary_players

# Find players in Salary data but NOT in NFL data
salary_not_in_nfl = salary_players - nfl_players

# Print unmatched names
print("\nPlayers in NFL data but missing from Salary data:")
for player in nfl_not_in_salary:
    print(f"NFLFilter: {player}")

print("\nPlayers in Salary data but missing from NFL data:")
for player in salary_not_in_nfl:
    print(f"SalaryFilter: {player}")

# Count the number of mismatches for reference
print(f"\nTotal unmatched in NFL filter: {len(nfl_not_in_salary)}")
print(f"Total unmatched in Salary filter: {len(salary_not_in_nfl)}")
